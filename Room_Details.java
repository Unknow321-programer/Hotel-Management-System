/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
// package hotel_management_system;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;

import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author admin
 */
public class Room_Details extends javax.swing.JFrame {

    /**
     * Creates new form Room_Details
     */
    public Room_Details() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        manu = new javax.swing.JPanel();
        lRoomBookingDetails = new javax.swing.JLabel();
        lManagersDetails = new javax.swing.JLabel();
        lHome = new javax.swing.JLabel();
        lLogOut = new javax.swing.JLabel();
        lStaffDetails = new javax.swing.JLabel();
        SearchPanel = new javax.swing.JPanel();
        lemail = new javax.swing.JLabel();
        temail = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        RoomData = new javax.swing.JScrollPane();
        RoomTable = new javax.swing.JTable();
        bgimg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        manu.setBackground(new java.awt.Color(255, 102, 51));

        lRoomBookingDetails.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lRoomBookingDetails.setForeground(new java.awt.Color(126, 90, 200));
        lRoomBookingDetails.setText("Room Details");
        lRoomBookingDetails.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));

        lManagersDetails.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lManagersDetails.setForeground(new java.awt.Color(255, 255, 255));
        lManagersDetails.setText("Managers Details");
        lManagersDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lManagersDetailsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lManagersDetailsMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lManagersDetailsMouseClicked(evt);
            }
        });

        lHome.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lHome.setForeground(new java.awt.Color(255, 255, 255));
        lHome.setText("Home");
        lHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lHomeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lHomeMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lHomeMouseClicked(evt);
            }
        });

        lLogOut.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lLogOut.setForeground(new java.awt.Color(255, 255, 255));
        lLogOut.setText("Log Out");
        lLogOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lLogOutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lLogOutMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lLogOutMouseClicked(evt);
            }
        });

        lStaffDetails.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lStaffDetails.setForeground(new java.awt.Color(255, 255, 255));
        lStaffDetails.setText("Staff Details");
        lStaffDetails.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lStaffDetailsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lStaffDetailsMouseExited(evt);
            }
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lStaffDetailsMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout manuLayout = new javax.swing.GroupLayout(manu);
        manu.setLayout(manuLayout);
        manuLayout.setHorizontalGroup(
            manuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manuLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(lHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 400, Short.MAX_VALUE)
                .addComponent(lManagersDetails)
                .addGap(49, 49, 49)
                .addComponent(lStaffDetails)
                .addGap(56, 56, 56)
                .addComponent(lRoomBookingDetails)
                .addGap(48, 48, 48)
                .addComponent(lLogOut)
                .addGap(25, 25, 25))
        );
        manuLayout.setVerticalGroup(
            manuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(manuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lHome)
                    .addComponent(lManagersDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lRoomBookingDetails, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lLogOut)
                    .addComponent(lStaffDetails))
                .addContainerGap())
        );

        getContentPane().add(manu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 40));

        SearchPanel.setBackground(new java.awt.Color(255, 153, 102));

        lemail.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        lemail.setForeground(new java.awt.Color(255, 255, 255));
        lemail.setText("Email:-");

        Search.setBackground(new java.awt.Color(153, 204, 255));
        Search.setFont(new java.awt.Font("Segoe UI Black", 1, 14)); // NOI18N
        Search.setForeground(new java.awt.Color(255, 255, 255));
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent ae) {
                SearchActionPerformed(ae);
            }
        });

        javax.swing.GroupLayout SearchPanelLayout = new javax.swing.GroupLayout(SearchPanel);
        SearchPanel.setLayout(SearchPanelLayout);
        SearchPanelLayout.setHorizontalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addGap(362, 362, 362)
                .addComponent(lemail)
                .addGap(18, 18, 18)
                .addComponent(temail, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(336, Short.MAX_VALUE))
        );
        SearchPanelLayout.setVerticalGroup(
            SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(SearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(temail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Search)
                    .addComponent(lemail))
                .addContainerGap())
        );

        getContentPane().add(SearchPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 1080, 50));

        RoomData.setBackground(new java.awt.Color(255, 255, 255));

        RoomTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Room No.", "Name", "Email", "Phone No.", "Room Type", "Bed Type", "Check In", "Check Out", "Bill"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RoomTable.setToolTipText("");
        RoomData.setViewportView(RoomTable);
        try {
            DefaultTableModel dtm = (DefaultTableModel)RoomTable.getModel();
            Connection con = new dbConnection().getDbconnection();
            Statement stm = con.createStatement();
            String q = "select email from room_reservation_details";
            ResultSet rs = stm.executeQuery(q);
            while(rs.next()) {
                Statement stmm = con.createStatement();
                q = "select customer_details.name,room_info.room_no,date_in,date_out,room_info.price,customer_details.email,customer_details.phone,room_info.room_type,room_info.bed"+
                " from customer_total_room_details,customer_details,room_info "+
                "where customer_total_room_details.email='"+rs.getString("email")+"' and customer_details.email='"+rs.getString("email")+"' and room_info.room_no=customer_total_room_details.room_no";
                ResultSet rss = stmm.executeQuery(q);
                while(rss.next()) {
                    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                    String[] Row = {
                        Integer.toString(rss.getInt("room_no")),
                        rss.getString("name"),
                        rss.getString("email"),
                        Long.toString(rss.getLong("phone")),
                        rss.getString("room_type"),
                        rss.getString("bed"),
                        sdf.format(rss.getDate("date_in")).toString(),
                        sdf.format(rss.getDate("date_out")).toString(),
                        Double.toString(rss.getDouble("price"))
                    };
                    dtm.addRow(Row);
                }
            }

        } catch (Exception e) {
            //TODO: handle exception
            System.out.println(e);
        }

        getContentPane().add(RoomData, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 110, 970, 550));

        bgimg.setBackground(new java.awt.Color(255, 153, 102));
        bgimg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("Images/Admin Home.jpg"))); // NOI18N
        getContentPane().add(bgimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    protected void lStaffDetailsMouseClicked(MouseEvent evt) {
        if(evt.getSource()==lStaffDetails) {
            dispose();
            new Staff_Details().setVisible(true);
        }
    }

    protected void lRoomBookingDetailsMouseClicked(java.awt.event.MouseEvent evt) {
        if(evt.getSource()==lRoomBookingDetails) {
            // dispose();
            // new ().setVisible(true);
        }
    }

    protected void lManagersDetailsMouseClicked(java.awt.event.MouseEvent evt) {
        if(evt.getSource()==lManagersDetails) {
            dispose();
            new Manager_Details().setVisible(true);
        }
    }

    protected void lHomeMouseClicked(java.awt.event.MouseEvent evt) {
        if(evt.getSource()==lHome) {
            dispose();
            new Admin_Home().setVisible(true);
        }
    }

    protected void lLogOutMouseClicked(java.awt.event.MouseEvent evt) {
        if(evt.getSource()==lLogOut) {
            dispose();
            new HomePage().setVisible(true);
        }
    }


    protected void SearchActionPerformed(ActionEvent ae) {
        if(temail.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "email is Empty", "Email is Empty", JOptionPane.WARNING_MESSAGE);
        }
        else {
            try {
                Connection con = new dbConnection().getDbconnection();
                Statement stm = con.createStatement();
                String q = "select customer_details.name,room_info.room_no,date_in,date_out,room_info.price,customer_details.email,customer_details.phone,room_info.room_type,room_info.bed"+
                " from customer_total_room_details,customer_details,room_info "+
                "where customer_total_room_details.email='"+temail.getText()+"' and customer_details.email='"+temail.getText()+"' and room_info.room_no=customer_total_room_details.room_no";
                ResultSet rs = stm.executeQuery(q);
                DefaultTableModel dtm = (DefaultTableModel)RoomTable.getModel();
                while(dtm.getRowCount()>0) 
                dtm.removeRow(dtm.getRowCount()-1);
                if(rs.next()==true) {
                    SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                    String[] Row = {
                        Integer.toString(rs.getInt("room_no")),
                        rs.getString("name"),
                        rs.getString("email"),
                        Long.toString(rs.getLong("phone")),
                        rs.getString("room_type"),
                        rs.getString("bed"),
                        sdf.format(rs.getDate("date_in")).toString(),
                        sdf.format(rs.getDate("date_out")).toString(),
                        Double.toString(rs.getDouble("price"))
                    };
                    dtm.addRow(Row);
                    while(rs.next()) {
                        String Rw[] = {
                            Integer.toString(rs.getInt("room_no")),
                            rs.getString("name"),
                            rs.getString("email"),
                            Long.toString(rs.getLong("phone")),
                            rs.getString("room_type"),
                            rs.getString("bed"),
                            sdf.format(rs.getDate("date_in")).toString(),
                            sdf.format(rs.getDate("date_out")).toString(),
                            Double.toString(rs.getDouble("price"))
                        };
                        dtm.addRow(Rw);
                    }
                }
                else {
                    // System.out.println("execute");
                    // DefaultTableModel dtm = (DefaultTableModel)RoomTable.getModel();
                    // Connection con = new dbConnection().getDbconnection();
                    Statement stmm = con.createStatement();
                    q = "select email from room_reservation_details";
                    ResultSet rs1 = stmm.executeQuery(q);
                    while(rs1.next()) {
                        Statement stmmm = con.createStatement();
                        q = "select customer_details.name,room_info.room_no,date_in,date_out,room_info.price,customer_details.email,customer_details.phone,room_info.room_type,room_info.bed"+
                        " from customer_total_room_details,customer_details,room_info "+
                        "where customer_total_room_details.email='"+rs1.getString("email")+"' and customer_details.email='"+rs1.getString("email")+"' and room_info.room_no=customer_total_room_details.room_no";
                        ResultSet rss = stmmm.executeQuery(q);
                        while(rss.next()) {
                            SimpleDateFormat sdf = new SimpleDateFormat("dd-MM-yyyy");
                            String[] Row = {
                                Integer.toString(rss.getInt("room_no")),
                                rss.getString("name"),
                                rss.getString("email"),
                                Long.toString(rss.getLong("phone")),
                                rss.getString("room_type"),
                                rss.getString("bed"),
                                sdf.format(rss.getDate("date_in")).toString(),
                                sdf.format(rss.getDate("date_out")).toString(),
                                Double.toString(rss.getDouble("price"))
                            };
                            dtm.addRow(Row);
                        }
                    }
                }
            } catch (Exception e) {
                //TODO: handle exception
            }
        }
    }

    private void lManagersDetailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lManagersDetailsMouseEntered
        // TODO add your handling code here:
        lManagersDetails.setForeground(new java.awt.Color(126,90,200));
        lManagersDetails.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, Color.black));
    }//GEN-LAST:event_lManagersDetailsMouseEntered

    private void lManagersDetailsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lManagersDetailsMouseExited
        // TODO add your handling code here:
        lManagersDetails.setForeground(Color.white);
        lManagersDetails.setBorder(null);
    }//GEN-LAST:event_lManagersDetailsMouseExited

    private void lHomeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lHomeMouseEntered
        // TODO add your handling code here:
        lHome.setForeground(new java.awt.Color(126,90,200));
        lHome.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, Color.black));
    }//GEN-LAST:event_lHomeMouseEntered

    private void lHomeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lHomeMouseExited
        // TODO add your handling code here:
        lHome.setForeground(Color.white);
        lHome.setBorder(null);
    }//GEN-LAST:event_lHomeMouseExited

    private void lLogOutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lLogOutMouseEntered
        // TODO add your handling code here:
        lLogOut.setForeground(new java.awt.Color(126,90,200));
        lLogOut.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, Color.black));
    }//GEN-LAST:event_lLogOutMouseEntered

    private void lLogOutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lLogOutMouseExited
        // TODO add your handling code here:
        lLogOut.setForeground(Color.white);
        lLogOut.setBorder(null);
    }//GEN-LAST:event_lLogOutMouseExited

    private void lStaffDetailsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lStaffDetailsMouseEntered
        // TODO add your handling code here:
        lStaffDetails.setForeground(new java.awt.Color(126,90,200));
        lStaffDetails.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, Color.black));
    }//GEN-LAST:event_lStaffDetailsMouseEntered

    private void lStaffDetailsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lStaffDetailsMouseExited
        // TODO add your handling code here:
        lStaffDetails.setForeground(Color.white);
        lStaffDetails.setBorder(null);
    }//GEN-LAST:event_lStaffDetailsMouseExited

    /**
     * @param args the command line arguments
     */
    // public static void main(String args[]) {
    //     /* Set the Nimbus look and feel */
    //     //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    //     /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    //      * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    //      */
    //     try {
    //         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    //             if ("Nimbus".equals(info.getName())) {
    //                 javax.swing.UIManager.setLookAndFeel(info.getClassName());
    //                 break;
    //             }
    //         }
    //     } catch (ClassNotFoundException ex) {
    //         java.util.logging.Logger.getLogger(Room_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (InstantiationException ex) {
    //         java.util.logging.Logger.getLogger(Room_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (IllegalAccessException ex) {
    //         java.util.logging.Logger.getLogger(Room_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //         java.util.logging.Logger.getLogger(Room_Details.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     }
    //     //</editor-fold>

    //     /* Create and display the form */
    //     java.awt.EventQueue.invokeLater(new Runnable() {
    //         public void run() {
    //             new Room_Details().setVisible(true);
    //         }
    //     });
    // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane RoomData;
    private javax.swing.JTable RoomTable;
    private javax.swing.JButton Search;
    private javax.swing.JPanel SearchPanel;
    private javax.swing.JLabel bgimg;
    private javax.swing.JLabel lHome;
    private javax.swing.JLabel lLogOut;
    private javax.swing.JLabel lManagersDetails;
    private javax.swing.JLabel lRoomBookingDetails;
    private javax.swing.JLabel lStaffDetails;
    private javax.swing.JLabel lemail;
    private javax.swing.JPanel manu;
    private javax.swing.JTextField temail;
    // End of variables declaration//GEN-END:variables
}
