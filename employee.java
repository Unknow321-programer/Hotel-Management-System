/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
// package hotel_management_system;

import java.awt.event.KeyEvent;
import java.awt.event.MouseEvent;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author admin
 */
public class employee extends javax.swing.JFrame {

    private final JFileChooser openFileChooser;
    private BufferedImage orignalBI;
    private String resource="";
    /**
     * Creates new form employee
     */
    public employee(String name) {
        initComponents(name);

        openFileChooser = new JFileChooser();
        openFileChooser.setCurrentDirectory(new File("c:\\temp"));
        openFileChooser.setFileFilter(new FileNameExtensionFilter("PNG images", "png"));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents(String Manager_name) {

        Gender = new javax.swing.ButtonGroup();
        jMenuItem1 = new javax.swing.JMenuItem();
        Status = new javax.swing.ButtonGroup();
        EmployeePanel2 = new javax.swing.JPanel();
        lname = new javax.swing.JLabel();
        lAge = new javax.swing.JLabel();
        lgender = new javax.swing.JLabel();
        lemail = new javax.swing.JLabel();
        lphone = new javax.swing.JLabel();
        ljob = new javax.swing.JLabel();
        lsalary = new javax.swing.JLabel();
        laddress = new javax.swing.JLabel();
        phone = new javax.swing.JTextField();
        email = new javax.swing.JTextField();
        tName = new javax.swing.JTextField();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        other = new javax.swing.JRadioButton();
        tAge = new javax.swing.JTextField();
        jobs = new javax.swing.JComboBox<>();
        tsalary = new javax.swing.JTextField();
        FileChoosebutton = new javax.swing.JButton();
        lfilename = new javax.swing.JLabel();
        submit = new javax.swing.JButton();
        laadhar = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tAddress = new javax.swing.JTextArea();
        lStatus = new javax.swing.JLabel();
        Active = new javax.swing.JRadioButton();
        In_Active = new javax.swing.JRadioButton();
        bgimg2 = new javax.swing.JLabel();
        manu = new javax.swing.JPanel();
        lStaffIn = new javax.swing.JLabel();
        lStaffOut = new javax.swing.JLabel();
        lHome = new javax.swing.JLabel();
        lStaffUpdate = new javax.swing.JLabel();
        bgimg = new javax.swing.JLabel();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(109, 100, 100));
        setForeground(new java.awt.Color(51, 51, 51));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        EmployeePanel2.setBackground(new java.awt.Color(153, 204, 255));
        EmployeePanel2.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        lname.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lname.setText("Name :-");

        lAge.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lAge.setText("Age :-");

        lgender.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lgender.setText("Gender :-");

        lemail.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lemail.setText("Email :-");

        lphone.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lphone.setText("Phone : -");

        ljob.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        ljob.setText("Job :-");

        lsalary.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lsalary.setText("Salary :-");

        laddress.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        laddress.setText("Address :-");

        phone.setBackground(new java.awt.Color(153, 204, 255));
        phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        phone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                phoneKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                phoneKeyReleased(evt);
            }
        });

        email.setBackground(new java.awt.Color(153, 204, 255));
        email.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        email.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                emailKeyReleased(evt);
            }
        });

        tName.setBackground(new java.awt.Color(153, 204, 255));
        tName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        tName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tNameKeyReleased(evt);
            }
        });

        female.setBackground(new java.awt.Color(153, 204, 255));
        Gender.add(female);
        female.setText("Female");

        male.setBackground(new java.awt.Color(153, 204, 255));
        Gender.add(male);
        male.setText("Male");

        other.setBackground(new java.awt.Color(153, 204, 255));
        Gender.add(other);
        other.setText("Other");

        tAge.setBackground(new java.awt.Color(153, 204, 255));
        tAge.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        tAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tAgeKeyReleased(evt);
            }
        });

        jobs.setBackground(new java.awt.Color(153,204,255,80));
        jobs.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Job Role", "Chef", "Accounting Manager", "Waitting Staff", "HouseKeeping Staff", "Maintanans And Cleaning", "Kitchen Staff", "Room Service" }));
        jobs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobsActionPerformed(evt);
            }
        });

        tsalary.setBackground(new java.awt.Color(153, 204, 255));
        tsalary.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 0, 0)));
        tsalary.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tsalaryKeyReleased(evt);
            }
        });

        FileChoosebutton.setText("choose");
        FileChoosebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FileChoosebuttonActionPerformed(evt);
            }
        });

        lfilename.setText("filename");

        submit.setBackground(new java.awt.Color(255, 102, 51));
        submit.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 18)); // NOI18N
        submit.setForeground(new java.awt.Color(255, 255, 255));
        submit.setText("Register");
        submit.setBorder(null);
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    submitActionPerformed(evt);
                } catch (IOException e) {
                    // TODO Auto-generated catch block
                    e.printStackTrace();
                }
            }
        });

        laadhar.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        laadhar.setText("Passport Photo:-");

        tAddress.setBackground(new java.awt.Color(153, 204, 255));
        tAddress.setColumns(20);
        tAddress.setRows(3);
        tAddress.setBorder(new javax.swing.border.MatteBorder(null));
        tAddress.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tAddressKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(tAddress);

        lStatus.setFont(new java.awt.Font("Ebrima", 1, 14)); // NOI18N
        lStatus.setText("Status:-");

        Active.setBackground(new java.awt.Color(153, 204, 255));
        Status.add(Active);
        Active.setText("Active");

        In_Active.setBackground(new java.awt.Color(153, 204, 255));
        Status.add(In_Active);
        In_Active.setText("In-Active");

        javax.swing.GroupLayout EmployeePanel2Layout = new javax.swing.GroupLayout(EmployeePanel2);
        EmployeePanel2.setLayout(EmployeePanel2Layout);
        EmployeePanel2Layout.setHorizontalGroup(
            EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeePanel2Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EmployeePanel2Layout.createSequentialGroup()
                        .addComponent(Active)
                        .addGap(34, 34, 34)
                        .addComponent(In_Active)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(EmployeePanel2Layout.createSequentialGroup()
                        .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lname, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lAge, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tAge, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lgender)
                            .addComponent(lphone, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lemail, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(EmployeePanel2Layout.createSequentialGroup()
                                    .addComponent(female, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGap(18, 18, 18)
                                    .addComponent(male)
                                    .addGap(18, 18, 18)
                                    .addComponent(other, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(13, 13, 13))
                                .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                        .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ljob, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jobs, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tsalary, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(laddress)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(laadhar)
                            .addGroup(EmployeePanel2Layout.createSequentialGroup()
                                .addComponent(lfilename, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(FileChoosebutton)))))
                .addGap(37, 37, 37))
        );
        EmployeePanel2Layout.setVerticalGroup(
            EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(EmployeePanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lname)
                    .addComponent(ljob))
                .addGap(0, 0, 0)
                .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jobs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lAge)
                    .addComponent(lsalary))
                .addGap(0, 0, 0)
                .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tsalary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lgender)
                    .addComponent(laddress))
                .addGap(9, 9, 9)
                .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(EmployeePanel2Layout.createSequentialGroup()
                        .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(female)
                            .addComponent(male)
                            .addComponent(other))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lphone)
                        .addGap(0, 0, 0)
                        .addComponent(phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lemail)
                        .addGap(0, 0, 0)
                        .addComponent(email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lStatus)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Active)
                            .addComponent(In_Active)))
                    .addGroup(EmployeePanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(laadhar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(EmployeePanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FileChoosebutton, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lfilename, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(submit, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        getContentPane().add(EmployeePanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 330, 580, 340));

        bgimg2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgimg2.setIcon(new javax.swing.ImageIcon(getClass().getResource("Images/staff2.jpg"))); // NOI18N
        getContentPane().add(bgimg2, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 190, 580, 143));

        manu.setBackground(new java.awt.Color(255, 102, 51));

        lStaffIn.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lStaffIn.setForeground(new java.awt.Color(255, 255, 255));
        lStaffIn.setText("Staff In");
        lStaffIn.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 102)));
        lStaffIn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent e) {
                lStaffInMouseEnterd(e);
            }
            public void mouseClicked(java.awt.event.MouseEvent me) {
                lStaffInMouseClicked(me);
            }
            public void mouseExited(java.awt.event.MouseEvent me) {
                lStaffInMouseExited(me);
            }
        });

        lStaffOut.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lStaffOut.setForeground(new java.awt.Color(255, 255, 255));
        lStaffOut.setText("Staff Out");
        lStaffOut.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent e) {
                lStaffOutMouseEnterd(e);
            }
            public void mouseClicked(java.awt.event.MouseEvent me) {
                lStaffOutMouseClicked(me,Manager_name);
            }
            public void mouseExited(java.awt.event.MouseEvent me) {
                lStaffOutMouseExited(me);
            }
        });

        lHome.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lHome.setForeground(new java.awt.Color(255, 255, 255));
        lHome.setText("Home");
        lHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent e) {
                lHomeMouseEnterd(e);
            }
            public void mouseClicked(java.awt.event.MouseEvent me) {
                lHomeMouseClicked(me,Manager_name);
            }
            public void mouseExited(java.awt.event.MouseEvent me) {
                lHomeMouseExited(me);
            }
        });

        lStaffUpdate.setFont(new java.awt.Font("Imprint MT Shadow", 1, 18)); // NOI18N
        lStaffUpdate.setForeground(new java.awt.Color(255, 255, 255));
        lStaffUpdate.setText("Staff Update");
        lStaffUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent e) {
                lStaffUpdateMouseEnterd(e);
            }
            public void mouseClicked(java.awt.event.MouseEvent me) {
                lStaffUpdateMouseClicked(me,Manager_name);
            }
            public void mouseExited(java.awt.event.MouseEvent me) {
                lStaffUpdateMouseExited(me);
            }
        });

        javax.swing.GroupLayout manuLayout = new javax.swing.GroupLayout(manu);
        manu.setLayout(manuLayout);
        manuLayout.setHorizontalGroup(
            manuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(manuLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(lHome)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 489, Short.MAX_VALUE)
                .addComponent(lStaffIn)
                .addGap(110, 110, 110)
                .addComponent(lStaffUpdate)
                .addGap(103, 103, 103)
                .addComponent(lStaffOut)
                .addGap(59, 59, 59))
        );
        manuLayout.setVerticalGroup(
            manuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, manuLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(manuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lStaffIn)
                    .addComponent(lStaffOut)
                    .addComponent(lHome)
                    .addComponent(lStaffUpdate))
                .addContainerGap())
        );

        getContentPane().add(manu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 40));

        bgimg.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        bgimg.setIcon(new javax.swing.ImageIcon(getClass().getResource("Images/Bg Image.jpeg"))); // NOI18N
        getContentPane().add(bgimg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1080, 700));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // staff update here
    protected void lStaffUpdateMouseExited(MouseEvent me) {
        lStaffUpdate.setForeground(java.awt.Color.white);
        lStaffUpdate.setBorder(null);
    }

    protected void lStaffUpdateMouseClicked(MouseEvent me,String name) {
        if(me.getSource()==lStaffUpdate) {
            dispose();
            new Employee_Update(name).setVisible(true);
        }
    }

    protected void lStaffUpdateMouseEnterd(MouseEvent e) {
        lStaffUpdate.setForeground(new java.awt.Color(126,90,200));
        lStaffUpdate.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, java.awt.Color.black));
    }

    // l home here
    protected void lHomeMouseExited(MouseEvent me) {
        lHome.setForeground(java.awt.Color.white);
        lHome.setBorder(null);
    }

    protected void lHomeMouseClicked(MouseEvent me,String name) {
        if(me.getSource()==lHome) {
            dispose();
            new Manager_Home(name).setVisible(true);
        }
    }

    protected void lHomeMouseEnterd(MouseEvent e) {
        lHome.setForeground(new java.awt.Color(126,90,200));
        lHome.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, java.awt.Color.black));
    }

    // l Staff Out here
    protected void lStaffOutMouseExited(MouseEvent me) {
        lStaffOut.setForeground(java.awt.Color.white);
        lStaffOut.setBorder(null);
    }

    protected void lStaffOutMouseClicked(MouseEvent me, String name) {
        if(me.getSource()==lStaffOut) {
            dispose();
            new Employee_Out(name).setVisible(true);
        }
    }

    protected void lStaffOutMouseEnterd(MouseEvent e) {
        lStaffOut.setForeground(new java.awt.Color(126,90,200));
        lStaffOut.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, java.awt.Color.black));
    }

    // Staff In here
    protected void lStaffInMouseExited(MouseEvent me) {
        lStaffIn.setForeground(java.awt.Color.white);
        lStaffIn.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(255, 255, 102)));
    }

    protected void lStaffInMouseClicked(MouseEvent me) {
        // if(me.getSource()==lStaffUpdate) {
        //     dispose();
        //     new Employee_Update(name).setVisible(true);
        // }
    }

    protected void lStaffInMouseEnterd(MouseEvent e) {
        lStaffIn.setForeground(new java.awt.Color(126,90,200));
        lStaffIn.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, java.awt.Color.black));
    }


    // other are here 
    private void tAddressKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tAddressKeyReleased
        // TODO add your handling code here
        if (tAddress.getText().length() > 20 && tAddress.getText().length() < 60) {
            tAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, (new java.awt.Color(0, 255, 0))));
        } else {
            tAddress.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)));
        }
    }//GEN-LAST:event_tAddressKeyReleased

    private void FileChoosebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FileChoosebuttonActionPerformed
        // TODO add your handling code here:
        int returnValue = openFileChooser.showOpenDialog(this);

        if (returnValue == JFileChooser.APPROVE_OPTION) {
            try {
                orignalBI = ImageIO.read(openFileChooser.getSelectedFile());
                
                lfilename.setText("file Succesfully loaded");
            } catch (IOException ioe) {
                lfilename.setText("Failed to load file");
            }
        } else {
            lfilename.setText("no File Chosen!");
        }
    }//GEN-LAST:event_FileChoosebuttonActionPerformed

    private void tsalaryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tsalaryKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{4,}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tsalary.getText());
        if (!match.matches()) {
            tsalary.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, (new java.awt.Color(255, 0, 0))));
        } else {
            tsalary.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 255, 0)));
        }
    }//GEN-LAST:event_tsalaryKeyReleased

    private void jobsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jobsActionPerformed

    // Don't update anything is here if you Don't have any about that
    private void submitActionPerformed(java.awt.event.ActionEvent evt) throws IOException{//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        String name = tName.getText();
        String phoneNo = phone.getText();
        String Email = email.getText();
        String age = tAge.getText();
        String address = tAddress.getText();
        String Salary = tsalary.getText();
        int username1 = name.length();
        int phone1 = phoneNo.length();
        int Age = age.length();
        int Address = address.length();
        int salary = Salary.length();
        

        if(name.equals("") || phoneNo.equals("") || Email.equals("") || age.equals("") || Salary.equals("") || address.equals("") || Gender.isSelected(null) || !male.isSelected() && !female.isSelected() && !other.isSelected())
        {
            JOptionPane.showMessageDialog(null, "All Detail must be Required.");
        }
        else {
            if(salary <= 4 || username1 <= 6 || phone1 != 10 || Age != 2 || Address < 10) {
                JOptionPane.showMessageDialog(null, "Please check username or phone or email or Age or Salary or Address");
            }
            else{
                File f = openFileChooser.getSelectedFile();
                // System.out.println(f.getAbsolutePath());

                FileInputStream fis = new FileInputStream(f);
                ByteArrayOutputStream bos = new ByteArrayOutputStream();
                byte[] buf = new byte[1024];
                try {
                    for (int readNum; (readNum = fis.read(buf)) != -1;) {
                        bos.write(buf, 0, readNum);     
                        // System.out.println("read " + readNum + " bytes,");
                    }
                } catch (IOException ex) {
                    JOptionPane.showMessageDialog(null, "Something Wrong When Choosing File", "Not Fine", JOptionPane.WARNING_MESSAGE);
                    // System.out.println("something wrong in file choosing time"+ex);
                }
                byte[] bytes = bos.toByteArray();
                fis.close();
                bos.close();
                


                try {
                    Connection conn =new dbConnection().getDbconnection();
                    

                    Statement statement = conn.createStatement();
                    ResultSet rs = statement.executeQuery("select email from employee_details where email ='"+email.getText()+"' ");
                    if(rs.next()!=true) {
                        PreparedStatement ps = conn.prepareStatement("INSERT INTO employee_details(name,email,age,gender,phone,job_role,salary,address,id_profe,status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
                        
                        ps.setString(1, name);
                        ps.setString(2, Email);
                        ps.setInt(3, Integer.parseInt(age));
                        if(male.isSelected()==true) {
                            ps.setString(4 , "male");
                        }
                        else if(female.isSelected()==true) {
                            ps.setString(4 , "female");
                        }
                        else {
                            ps.setString(4 , "other");
                        }
                        ps.setString(5, phoneNo);
                        ps.setString(6, jobs.getSelectedItem().toString());
                        ps.setDouble(7, Double.parseDouble(Salary));
                        ps.setString(8, address);
                        ps.setBytes(9, bytes);
                        if(Active.isSelected()==true) {
                            ps.setBoolean(10, true);
                        }
                        else {
                            ps.setBoolean(10, false);
                        }
                        ps.executeUpdate();
                        ps.close();
                        // image restore from DB code if you want to see Img than and than only comment out code
                        
                        // byte[] byteImg=null;
                        // PreparedStatement pp = conn
                        //     .prepareStatement("SELECT id_profe FROM employee_details WHERE id = ?");
                        // pp.setInt(1, 1);
                        // ResultSet rs = pp.executeQuery();
                        // while (rs.next()) {
                        //     byteImg = rs.getBytes(1);
                        //     // use the data in some way here
                        // }
                        // FileOutputStream fos = new FileOutputStream("E:/demoimg.png");
                        // fos.write(byteImg);
                        // fos.close();
                        JOptionPane.showMessageDialog(null, "Registration is succesfull!");
                    }
                    else {
                        JOptionPane.showMessageDialog(submit, "Given Details is Already Exits", "Record Found !", JOptionPane.WARNING_MESSAGE);
                    }
                }
                catch(Exception e) {
                    System.out.println(e);
                }
            }
        }
    }//GEN-LAST:event_submitActionPerformed

    private void tAgeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tAgeKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[0-9]{2}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tAge.getText());
        if (!match.matches()) {
            tAge.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, (new java.awt.Color(255, 0, 0))));
        } else {
            tAge.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 255, 0)));
        }
    }//GEN-LAST:event_tAgeKeyReleased

    private void tNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tNameKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[a-zA-Z\\s]{6,20}$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(tName.getText());
        if (!match.matches()) {
            tName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, (new java.awt.Color(255, 0, 0))));
        } else {
            tName.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 255, 0)));
        }
    }//GEN-LAST:event_tNameKeyReleased

    private void emailKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailKeyReleased
        // TODO add your handling code here:
        String PATTERN = "^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"
                + "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$";
        Pattern patt = Pattern.compile(PATTERN);
        Matcher match = patt.matcher(email.getText());
        if (!match.matches()) {
            email.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, (new java.awt.Color(255, 0, 0))));
        } else {
            email.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 255, 0)));
        }
    }//GEN-LAST:event_emailKeyReleased

    private void phoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneKeyReleased
        // TODO add your handling code here:
//        String PATTERN = "^[0-9]{10}$";
//        Pattern patt = Pattern.compile(PATTERN);
//        Matcher match = patt.matcher(phone.getText());
//        if (!match.matches()) {
//            phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, (new java.awt.Color(255, 0, 0))));
//        } else {
//                phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 255, 0)));
//        }
    }//GEN-LAST:event_phoneKeyReleased

    private void phoneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phoneKeyPressed
        // TODO add your handling code here:
        String phoneNo = phone.getText();
        int phNo = phoneNo.length();
        char c = evt.getKeyChar();
        if(evt.getKeyChar() >= '0' && evt.getKeyChar() <= '9'){
            if(phNo < 10){
                phone.setEditable(true);
            }else {
                phone.setEditable(false);
                phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, new java.awt.Color(0, 255, 0)));
            }
        }else{
            if(evt.getExtendedKeyCode() == KeyEvent.VK_BACK_SPACE || evt.getExtendedKeyCode() == KeyEvent.VK_DELETE){
                phone.setEditable(true);
            }else{
                phone.setEditable(false);
                phone.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 0, 2, 0, (new java.awt.Color(255, 0, 0))));
            }
        }
    }//GEN-LAST:event_phoneKeyPressed

    /**
     * @param args the command line arguments
     */
    // public static void main(String args[]) {
    //     /* Set the Nimbus look and feel */
    //     //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    //     /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
    //      * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
    //      */
    //     try {
    //         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
    //             if ("Nimbus".equals(info.getName())) {
    //                 javax.swing.UIManager.setLookAndFeel(info.getClassName());
    //                 break;
    //             }
    //         }
    //     } catch (ClassNotFoundException ex) {
    //         java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (InstantiationException ex) {
    //         java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (IllegalAccessException ex) {
    //         java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     } catch (javax.swing.UnsupportedLookAndFeelException ex) {
    //         java.util.logging.Logger.getLogger(employee.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    //     }
    //     //</editor-fold>

    //     /* Create and display the form */
    //     java.awt.EventQueue.invokeLater(new Runnable() {
    //         public void run() {
    //             new employee("name").setVisible(true);
    //         }
    //     });
    // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton Active;
    private javax.swing.JPanel EmployeePanel2;
    private javax.swing.JButton FileChoosebutton;
    private javax.swing.ButtonGroup Gender;
    private javax.swing.JRadioButton In_Active;
    private javax.swing.ButtonGroup Status;
    private javax.swing.JLabel bgimg;
    private javax.swing.JLabel bgimg2;
    private javax.swing.JTextField email;
    private javax.swing.JRadioButton female;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> jobs;
    private javax.swing.JLabel lAge;
    private javax.swing.JLabel lHome;
    private javax.swing.JLabel lStaffIn;
    private javax.swing.JLabel lStaffOut;
    private javax.swing.JLabel lStaffUpdate;
    private javax.swing.JLabel lStatus;
    private javax.swing.JLabel laadhar;
    private javax.swing.JLabel laddress;
    private javax.swing.JLabel lemail;
    private javax.swing.JLabel lfilename;
    private javax.swing.JLabel lgender;
    private javax.swing.JLabel ljob;
    private javax.swing.JLabel lname;
    private javax.swing.JLabel lphone;
    private javax.swing.JLabel lsalary;
    private javax.swing.JRadioButton male;
    private javax.swing.JPanel manu;
    private javax.swing.JRadioButton other;
    private javax.swing.JTextField phone;
    private javax.swing.JButton submit;
    private javax.swing.JTextArea tAddress;
    private javax.swing.JTextField tAge;
    private javax.swing.JTextField tName;
    private javax.swing.JTextField tsalary;
    // End of variables declaration//GEN-END:variables
}
